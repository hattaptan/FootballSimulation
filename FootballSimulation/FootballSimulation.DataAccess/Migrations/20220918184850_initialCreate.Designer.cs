// <auto-generated />
using FootballSimulation.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FootballSimulation.DataAccess.Migrations
{
    [DbContext(typeof(FootballSimulationContext))]
    [Migration("20220918184850_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FootballSimulation.Entities.Entities.Fixture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<int>("OpponentTeamId")
                        .HasColumnType("int");

                    b.Property<int>("WeekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HomeTeamId")
                        .IsUnique();

                    b.HasIndex("OpponentTeamId")
                        .IsUnique();

                    b.HasIndex("WeekId")
                        .IsUnique();

                    b.ToTable("Fixtures");
                });

            modelBuilder.Entity("FootballSimulation.Entities.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConcededGoal")
                        .HasColumnType("int");

                    b.Property<int>("FixtureId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("ScoredGoal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FixtureId");

                    b.ToTable("Matchs");
                });

            modelBuilder.Entity("FootballSimulation.Entities.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TeamName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FootballSimulation.Entities.Entities.Week", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("WeekNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("FootballSimulation.Entities.Entities.Fixture", b =>
                {
                    b.HasOne("FootballSimulation.Entities.Entities.Team", "HomeTeam")
                        .WithOne()
                        .HasForeignKey("FootballSimulation.Entities.Entities.Fixture", "HomeTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FootballSimulation.Entities.Entities.Team", "OpponentTeam")
                        .WithOne()
                        .HasForeignKey("FootballSimulation.Entities.Entities.Fixture", "OpponentTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FootballSimulation.Entities.Entities.Week", "Week")
                        .WithOne()
                        .HasForeignKey("FootballSimulation.Entities.Entities.Fixture", "WeekId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("HomeTeam");

                    b.Navigation("OpponentTeam");

                    b.Navigation("Week");
                });

            modelBuilder.Entity("FootballSimulation.Entities.Entities.Match", b =>
                {
                    b.HasOne("FootballSimulation.Entities.Entities.Fixture", "Fixture")
                        .WithMany()
                        .HasForeignKey("FixtureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fixture");
                });
#pragma warning restore 612, 618
        }
    }
}
